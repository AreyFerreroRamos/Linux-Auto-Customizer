########################################################################################################################
# - Name: .tmux.conf                                                                                                   #
# - Description: Miscellaneous configuration of tmux using tmux conf syntax.                                           #
# - Creation Date: 11/12/21                                                                                            #
# - Last Modified: 11/12/21                                                                                            #
# - Author & Maintainer: Aleix Mariné-Tena                                                                             #
# - Email: aleix.marine@estudiants.urv.cat                                                                             #
# - Permissions: This script can not be executed directly, only sourced to import its functions and process its own    #
# imports. See the header of each function to see its privilege requirements.                                          #
# - Arguments: No arguments                                                                                            #
# - Usage: Not executed directly, sourced from install.sh                                                              #
# - License: GPL v2.0                                                                                                  #
########################################################################################################################

########################################################################################################################
###################################################### VARIABLES #######################################################
########################################################################################################################

# used colours
GREY="colour233"
LGREY="colour235"
BLUE="colour4"
BLACK="#000000"
ORANGE="colour172"
GREEN="colour76"
WHITE="colour252"
UBUNTU="#2c001e"

# Dracula Colours
background_color='#282a36'
current_line_color='#44475a'
foreground_color='#f8f8f2'
comment_color='#6272a4'
cyan='#8be9fd'
green='#50fa7b'
orange='#ffb86c'
pink='#ff79c6'
purple='#bd93f9'
red='#ff5555'
yellow='#f1fa8c'


########################################################################################################################
###################################################### INTERFACES ######################################################
########################################################################################################################
# This allows the use of the mouse to manipulate the panes and windows of tmux. This is equivalent to:
# set -g mouse-select-window on  # Clickable windows
# set -g mouse-select-pane on  # Clickable panes
# set -g mouse-resize-pane on  # Resizable panes
set -g mouse on
# Ctrl Scroll to Zoom
bind-key -T root C-WheelUpPane {
       run-shell "xdotool key Ctrl+plus"
}

bind-key -T root C-WheelDownPane {
       run-shell "xdotool key Ctrl+minus"
}

bind-key -T root C-MouseDown2Pane {
       run-shell "xdotool key Ctrl+0"
}


# Sets the system variable $TERM
set -g default-terminal "screen-256color"



##### Clipboard integration #####
#{

# ctrl+c to send to clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"

# ctrl+v to paste from clipboard
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Selection with mouse should copy to clipboard right away, in addition to the default action.
unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"

# Update default binding of Enter to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer -- \"$(xclip -o -sel primary);\"; tmux paste-buffer -p"
#}









########################################################################################################################
###################################################### BEHAVIOUR #######################################################
########################################################################################################################

# https://github.com/neovim/neovim/issues/2035
# Time passed for the keyboard device to recognize an escape sequence. By default is set to 500 ms which makes tmux
# misinterpret an actual press of the ESC key with an escape sequence.
# ESC delay after prefix (ms)
set -sg escape-time 10


# By default tmux will update the window title automatically depending on the last executed command within that window.
# In order to prevent tmux from overriding window names automatic renaming is turned off. You can turn it on by
# commenting the following lines and commenting out the other.
#set -g allow-rename on
#setw -g automatic-rename
#set -g automatic-rename-format '#{b:pane_current_path}'
set -g allow-rename off


# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# Useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Start numbering sessions on 1
set -g base-index 1
setw -g pane-base-index 1


########################################################################################################################
###################################################### BINDINGS ########################################################
########################################################################################################################

# C-b is not acceptable -- Vim uses it
set -g prefix C-a
bind-key C-a last-window
bind-key a send-prefix

# # Use vim keybindings in copy mode
setw -g mode-keys vi

# split panes using | and -
unbind '"'
unbind %
bind | split-window -h
bind - split-window -v

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# window creation/splitting
unbind h
unbind v
bind | split-window -h -p 50 -c "#{pane_current_path}"
bind - split-window -v -p 50 -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind i command-prompt -p 'Insert window at:' 'new-window -c "#{pane_current_path}" -a -t %1; swap-window -t -1'
bind I command-prompt -p 'New window at:' 'new-window -c "#{pane_current_path}" -t %1'

# resize pane
bind -r K resize-pane -U
bind -r J resize-pane -D
bind -r L resize-pane -R
bind -r H resize-pane -L
bind    m resize-pane -Z

# set to main-horizontal, 66% height for main pane
bind m run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"
# Same thing for verical layouts
bind M run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50"

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."











########################################################################################################################
############################################################ UI ########################################################
########################################################################################################################


# colorize messages in the command line
set -g message-style "bg=cyan,fg=black"
set -g pane-active-border-style fg=yellow,bg=$background_color


set -g pane-border-style fg=$BLUE,bg=$BLACK
setw -g window-status-activity-style fg=green,bg=black,none

setw -g window-status-style bg=black

setw -g pane-border-format '#{pane_index}#{pane_current_path}'

# default window title colors
setw -g window-status-style fg='#bd93f9',bg=default

# active window title colors
setw -g window-status-current-style fg='#ff79c6',bg='#282a36'

# pane border
set -g pane-border-style fg=$BLUE #fg=base02
set -g pane-active-border-style fg=yellow
set -g pane-border-status top
set -g pane-border-format "#P: #{pane_current_command}"

# message text
set -g message-style "bg=cyan,fg=black"

# pane number display
set -g display-panes-active-colour green
set -g display-panes-colour $WHITE
# clock
setw -g clock-mode-colour green #green

# redraw status line every 1 second
set -g status-interval 1
set -g status-interval 1

set -g status-left-length 52
setw -g window-status-current-format $WINDOW
setw -g window-status-format $WINDOW

set -g status-right-length 140
set -g status-left "#[fg=colour232,bg=colour154]#S#[fg=white,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238]#{s|/home/|~/|$HOME|~|=:pane_current_command}#[fg=white,bg=colour238,nobold,nounderscore,noitalics]"

set -g status-right '#[fg=$foreground_color,bold]#(bash €{CURRENT_INSTALLATION_FOLDER}/clockmoji.sh)#[default]'

set -g window-status-current-format "#[fg=green, bg=$background_color, bold][#[fg=red,bold]#(whoami)#[fg=green,bold]]"

# status bar formats
WINDOW="[#W]"

# set active/pasive pane background colours
set -g window-style fg=$WHITE

%if "#{==:#{host},myhost}"
set -g status-style bg=$GREY
%elif "#{==:#{host},myotherhost}"
set -g status-style bg=green
%else
set -g status-style bg=blue
%endif
set -g window-active-style fg=default
set -g window-active-style bg=#2c001e

set -g status 'on'
#set -g status-position top
#set -g status-justify 'centre'
set -g status-right-length '100'
set -g message-command-style fg=$BLACK,bg=cyan
set -g message-style fg=black,bg=cyan

# put useful info in the status bar
# '#H:#S.#I.#P #W #T'
set -g set-titles on
set -g set-titles-string '#T.tmux.#S.#W.#P'

# window status
setw -g window-status-style fg='#bd93f9',bg=default
setw -g window-status-current-style fg='#ff79c6',bg='#282a36'


set -g status-bg colour238
set -g status-fg white











# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window











# focus events enabled for terminals that support them
set -g focus-events on











# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

